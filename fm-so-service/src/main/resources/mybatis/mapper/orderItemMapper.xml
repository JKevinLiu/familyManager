<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.snill.fm.mapper.OrderItemMapper" >
    <resultMap id="BaseResultMap" type="com.snill.fm.bean.OrderItem" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result property="orderId" column="order_id" jdbcType="INTEGER" />
        <result property="price" column="price" jdbcType="INTEGER" />
        <result property="createDate" column="create_date" jdbcType="VARCHAR" />
        <result property="deleted" column="deleted" jdbcType="INTEGER" />

        <!--
        <association property="product" column="product_id" javaType="com.snill.fm.bean.Product" select="com.snill.fm.mapper.ProductMapper.getProductById" />
        -->
        <result property="productId" column="product_id" jdbcType="INTEGER" />
        <result property="productCode" column="product_code" jdbcType="VARCHAR" />
        <result property="productName" column="product_name" jdbcType="VARCHAR" />


        <result property="description" column="description" jdbcType="VARCHAR" />
    </resultMap>


    <sql id="Base_Column_List" >
        id, order_id, price, create_date, deleted, product_id, product_code, product_name, description
    </sql>

    <select id="getOrderItemById" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM order_item
        WHERE id = #{id}
        and deleted = 0
    </select>

    <select id="getOrderItemListByOrderId" parameterType="java.lang.Integer" resultMap="BaseResultMap"  >
        SELECT
        <include refid="Base_Column_List" />
        FROM order_item
        where deleted = 0
        and order_id = #{id}
    </select>

    <insert id="add" parameterType="com.snill.fm.bean.OrderItem" >
        INSERT INTO
        order_item
        (order_id, price, create_date, product_id, product_code, product_name, description)
        VALUES
        (#{orderId}, #{price}, #{createDate}, #{productId}, #{productCode}, #{productName}, #{description})
    </insert>

    <update id="update" parameterType="com.snill.fm.bean.OrderItem" >
        UPDATE
        order_item
        SET
        order_id = #{orderId},
        price = #{price},
        create_date = #{createDate},
        product_id = #{productId},
        product_code = #{productCode},
        product_name = #{productName},
        description = #{description}
        WHERE
        id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Integer" >
        UPDATE
        order_item
        SET
        deleted = 1
        WHERE
        id = #{id}
    </delete>

    <delete id="deleteOrderItemByOrderId" parameterType="java.lang.Integer" >
        UPDATE
        order_item
        SET
        deleted = 1
        WHERE
        order_id = #{orderId}
    </delete>


    <!-- 批量插入数据 -->
    <insert id="batchAdd" parameterType="java.util.List" useGeneratedKeys="true">
        <selectKey resultType="int" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        insert into order_item
        (order_id, price, create_date, product_id, product_code, product_name, description)
        values
        <foreach collection="list" item="orderItem" index="index"
                 separator=",">
            (
            #{orderItem.orderId}, #{orderItem.price}, #{orderItem.createDate}, #{orderItem.productId},
            #{orderItem.productCode}, #{orderItem.productName}, #{orderItem.description}
            )
        </foreach>
    </insert>

    <!-- 批量更新数据 -->
    <update id="batchUpdate">
        update order_item
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="order_id =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.orderId!=null">
                        when id=#{item.id} then #{item.orderId}
                    </if>
                </foreach>
            </trim>
            <trim prefix="price =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.price!=null">
                        when id=#{item.id} then #{item.price}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_date =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.createDate!=null">
                        when id=#{item.id} then #{item.createDate}
                    </if>
                </foreach>
            </trim>
            <trim prefix="product_id =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.productId!=null">
                        when id=#{item.id} then #{item.productId}
                    </if>
                </foreach>
            </trim>
            <trim prefix="product_code =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.productCode!=null">
                        when id=#{item.id} then #{item.productCode}
                    </if>
                </foreach>
            </trim>
            <trim prefix="product_name =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.productName!=null">
                        when id=#{item.id} then #{item.productName}
                    </if>
                </foreach>
            </trim>
            <trim prefix="description =case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.description!=null">
                        when id=#{item.id} then #{item.description}
                    </if>
                </foreach>
            </trim>
        </trim>
        <where>
            <foreach collection="list" separator="or" item="item">
                id = #{item.id}
            </foreach>
        </where>


    </update>

</mapper>