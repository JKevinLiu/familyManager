<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snill.fm.mapper.UserMapper" >
    <resultMap id="BaseResultMap" type="com.snill.fm.bean.base.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />

    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />

    <association property="role" column="role_id" javaType="com.snill.fm.bean.base.Role" select="com.snill.fm.mapper.RoleMapper.getRoleById" />
</resultMap>

    <sql id="Base_Column_List" >
        id, username, password, nickname, age, sex, phone, address, role_id
    </sql>

    <select id="getUserById" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        WHERE id = #{id}
    </select>

    <select id="getUserList" resultMap="BaseResultMap"  >
        SELECT
        <include refid="Base_Column_List" />
        FROM user
    </select>

    <insert id="add" parameterType="com.snill.fm.bean.base.User" >
        INSERT INTO
        user
        (username, password, nickname, age, sex, phone, address, role_id)
        VALUES
        (#{username}, #{password}, #{nickname}, #{age}, #{sex}, #{phone}, #{address}, #{role.id})
    </insert>


    <update id="update" parameterType="com.snill.fm.bean.base.User" >
        UPDATE
        user
        SET
        username = #{username},
        password = #{password},
        nickname = #{nickname},
        age = #{age},
        sex = #{sex},
        phone = #{phone},
        address = #{address},
        role_id = #{role.id}
        WHERE
        id = #{id}
    </update>


    <delete id="delete" parameterType="java.lang.Integer" >
        DELETE FROM
        user
        WHERE
        id = #{id}
    </delete>

    <select id="findUserByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        WHERE username = #{username}
    </select>

</mapper>